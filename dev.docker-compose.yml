version: '3.7'

services:
  
  filebeat:
    hostname: "{{.Node.Hostname}}-filebeat"
    user: root
    container_name: 'dmtools.filebeat'
    image: 'dmtools.filebeat'
    build:
      context: ./filebeat
      dockerfile: .dockerfile
    networks:
      - internal
    volumes:
      - filebeatdata:/usr/share/filebeat/data/
      - /var/run/docker.sock:/var/run/docker.sock
      # This is needed for filebeat to load container log path as specified in filebeat.yml
      - /var/lib/docker/containers/:/var/lib/docker/containers/:ro
      # This is needed for filebeat to load logs for system and auth modules
      - /var/log/:/var/log/:ro
      - /home/kpeshekhonov/git/DMTools/elk/filebeat.yml:/usr/share/filebeat/filebeat.yml
      #- filebeatconfig:/usr/share/filebeat
    environment:
      - ELASTICSEARCH_HOST=${ELASTICSEARCH_HOST:-'dmtools.elasticsearch'}
      - KIBANA_HOST=${KIBANA_HOST:-'dmtools.kibana'}
      - ELASTICSEARCH_USERNAME=${ELASTICSEARCH_USERNAME:-elastic}
      - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD:-123qwe!E}
    # disable strict permission checks
    command: ["--strict.perms=false"]
  
  elasticsearch:
    container_name: 'dmtools.elasticsearch'
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.1
    ports:
      - 9200:9200
    volumes:
      - /home/kpeshekhonov/elasticsearch/data/:/usr/share/elasticsearch/data/
    environment:
      - xpack.monitoring.enabled=true
      - xpack.watcher.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
      - ELASTIC_PASSWORD=123qwe!E
    depends_on:
      - filebeat
    networks:
      - internal

  kibana:
    container_name: 'dmtools.kibana'
    image: docker.elastic.co/kibana/kibana:7.6.1
    ports:
      - 5601:5601
    depends_on:
      - filebeat
      - elasticsearch
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch
    networks:
      - internal
  
  postgres:
    container_name: 'dmtools.postgres'
    restart: always
    image: postgres
    build:
      context: ./postgres
      dockerfile: .dockerfile
    ports:
      - "5432:5432"
    volumes:
      - /usr/postgres/data_dmtools/:/var/lib/postgresql/data/
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_MULTIPLE_DATABASES=dmtoolsdb_identity,dmtoolsdb_users,dmtoolsdb
    networks:
      - internal
  
  identity-server:
    container_name: 'identity.server'
    image: 'identity.server'
    build:
      context: ./API/Identity
      dockerfile: dev.dockerfile
    ports:
      - "8000:443"
    volumes:
      - /home/kpeshekhonov/https:/https:ro
    depends_on:
      - postgres
      - kibana
    networks:
      - internal

  api-users:
    container_name: 'dmtools.users'
    image: 'dmtools.users'
    build:
      context: ./API/Users
      dockerfile: dev.dockerfile
    ports:
      - "8001:443"
    volumes:
      - /home/kpeshekhonov/https:/https:ro
    depends_on:
      - postgres
      - identity-server
    networks:
      - internal

  web:
    container_name: 'dmtools.web'
    image: 'dmtools.web'
    build:
      context: ./Web
      dockerfile: dev.dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /home/kpeshekhonov/https:/https:ro
    depends_on:
      - api-users
    networks:
      - internal
  
volumes:
  filebeatdata:
  filebeatconfig:
      
networks:
  internal:
    driver: bridge