version: '3.7'

services:  
  postgres:
    container_name: 'dmtools.postgres'
    restart: always
    image: postgres
    ports:
      - "8000:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_MULTIPLE_DATABASES=dmtoolsdb.identity,dmtoolsdb.users,dmtoolsdb
    networks:
      - aspnetcoreapp-network
  
  identity-server:
    container_name: 'identity.server'
    image: 'identity.server'
    build:
      context: .\API\Identity
      dockerfile: dev.dockerfile
    ports:
      - "8001:443"
    volumes:
      - /usr/https:/https
    depends_on:
      - "postgres"
    networks:
      - aspnetcoreapp-network

  api-users:
    container_name: 'dmtools.users'
    image: 'dmtools.users'
    build:
      context: .\API\Users
      dockerfile: dev.dockerfile
    ports:
      - "8002:443"
    volumes:
      - /usr/https:/https
    depends_on:
      - "postgres"
      - "identity-server"
    networks:
      - aspnetcoreapp-network

  web:
    container_name: 'dmtools.web'
    image: 'dmtools.web'
    build:
      context: .\Web
      dockerfile: dev.dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /usr/https:/https
    depends_on:
      - "postgres"
      - "identity-server"
      - "api-users"
    networks:
      - aspnetcoreapp-network
        
volumes:
  postgres-data-auth:
  postgres-data-users:
  postgres-data:
      
networks:
  aspnetcoreapp-network:
    driver: bridge